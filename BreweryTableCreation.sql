DROP TABLE IF EXISTS CUSTOMER;

CREATE TABLE CUSTOMER (
    CustomerID VARCHAR(6) NOT NULL,
    CustomerName VARCHAR(20) NOT NULL,
    ModeOfPayment VARCHAR(6) NOT NULL,
    PhNo INT(10) NOT NULL,
    Email VARCHAR(30) NOT NULL,
    CONSTRAINT CustomerID PRIMARY KEY (CustomerID)
);
    

DROP TABLE IF EXISTS BRANCH;

CREATE TABLE BRANCH (
    BranchID VARCHAR(5) NOT NULL,
    Location VARCHAR(10) NOT NULL,
    CONSTRAINT BranchID PRIMARY KEY (BranchID)
);
    

DROP TABLE IF EXISTS PRODUCT;

CREATE TABLE PRODUCT (
    ProductID VARCHAR(5) NOT NULL,
    ProductName VARCHAR(20) NOT NULL,
    Price INT(4) NOT NULL,
    CONSTRAINT ProductID PRIMARY KEY (ProductID)
);

DROP TABLE IF EXISTS RAWMATERIALS;

CREATE TABLE RAWMATERIALS (
    TypeID VARCHAR(5) NOT NULL,
    ExpiryDate DATE NOT NULL,
    CONSTRAINT TypeID PRIMARY KEY (TypeID)
);


DROP TABLE IF EXISTS SUPPLIER;

CREATE TABLE SUPPLIER (
    SupplierID VARCHAR(6) NOT NULL,
    SupplierName VARCHAR(20) NOT NULL,
    Address VARCHAR(50) NOT NULL,
    CONSTRAINT SupplierID PRIMARY KEY (SupplierID)
);



DROP TABLE IF EXISTS EMPLOYEE;

CREATE TABLE EMPLOYEE (
    EmployeeID VARCHAR(6) NOT NULL,
    EmpName VARCHAR(20) NOT NULL,
    BranchID VARCHAR(5) NOT NULL,
    ManagerID VARCHAR(6) NOT NULL,
    JoinDate DATE NOT NULL,
    Designation VARCHAR(25) NOT NULL,
    CONSTRAINT EmployeeID PRIMARY KEY (EmployeeID),
    FOREIGN KEY (BranchID)
        REFERENCES BRANCH (BranchID),
    FOREIGN KEY (ManagerID)
        REFERENCES EMPLOYEE (EmployeeID)
);


DROP TABLE IF EXISTS BREWER;

CREATE TABLE BREWER (
    BEmployeeID VARCHAR(6) NOT NULL,
    Salary INT(8) NOT NULL,
    CONSTRAINT BEmployeeID PRIMARY KEY (BEmployeeID),
    FOREIGN KEY (BEmployeeID)
        REFERENCES EMPLOYEE (EmployeeID)
);


DROP TABLE IF EXISTS SERVERS;

CREATE TABLE SERVERS (
    SEmployeeID VARCHAR(6) NOT NULL,
    HourlyRate INT(3) NOT NULL,
    CONSTRAINT SEmployeeID PRIMARY KEY (SEmployeeID),
    FOREIGN KEY (SEmployeeID)
        REFERENCES EMPLOYEE (EmployeeID)
);

DROP TABLE IF EXISTS SERVED;

CREATE TABLE SERVED (
    NoOfCustomersServed INT(3) NOT NULL,
    SEmployeeID VARCHAR(12) NOT NULL,
    CustomerID VARCHAR(6) NOT NULL,
    CONSTRAINT pk_SERVED PRIMARY KEY (SEmployeeID , CustomerID),
    FOREIGN KEY (SEmployeeID)
        REFERENCES SERVERS (SEmployeeID),
    FOREIGN KEY (CustomerID)
        REFERENCES CUSTOMER (CustomerID)
);

DROP TABLE IF EXISTS BILL;

CREATE TABLE BILL (
    DateOfPurchase DATE NOT NULL,
    Quantity INT(5) NOT NULL,
    Amount INT(5) NOT NULL,
    TypeID VARCHAR(5) NOT NULL,
    SupplierID VARCHAR(6) NOT NULL,
    CONSTRAINT pk_BILL PRIMARY KEY (TypeID , SupplierID),
    FOREIGN KEY (TypeID)
        REFERENCES RAWMATERIALS (TypeID),
    FOREIGN KEY (SupplierID)
        REFERENCES SUPPLIER (SupplierID)
);



DROP TABLE IF EXISTS ORDERS;

CREATE TABLE ORDERS (
    TransactionID VARCHAR(10) NOT NULL,
    DateOfPurchase DATE NOT NULL,
    Amount INT(5) NOT NULL,
    CustomerID VARCHAR(6) NOT NULL,
    CONSTRAINT TransactionID PRIMARY KEY (TransactionID),
    FOREIGN KEY (CustomerID)
        REFERENCES CUSTOMER (CustomerID)
);


DROP TABLE IF EXISTS BATCH;

CREATE TABLE BATCH (
    BatchID VARCHAR(7) NOT NULL,
    DateProduced DATE NOT NULL,
    ExpiryDate DATE NOT NULL,
    ProductID VARCHAR(5) NOT NULL,
    CONSTRAINT BatchID PRIMARY KEY (BatchID),
    FOREIGN KEY (ProductID)
        REFERENCES PRODUCT (ProductID)
);


DROP TABLE IF EXISTS STOCK;

CREATE TABLE STOCK (
    NoOfPreparedBatches INT(3) NOT NULL,
    BatchID VARCHAR(7) NOT NULL,
    BEmployeeID VARCHAR(6) NOT NULL,
    CONSTRAINT STOCK PRIMARY KEY (BatchID , BEmployeeID),
    FOREIGN KEY (BatchID)
        REFERENCES BATCH (BatchID),
    FOREIGN KEY (BEmployeeID)
        REFERENCES BREWER (BEmployeeID)
);


DROP TABLE IF EXISTS VISIT;

CREATE TABLE VISIT (
    BranchID VARCHAR(5) NOT NULL,
    CustomerID VARCHAR(6) NOT NULL,
    NoOfVisits INT(3) NOT NULL,
    CONSTRAINT pk_VISIT PRIMARY KEY (BranchID , CustomerID),
    FOREIGN KEY (BranchID)
        REFERENCES BRANCH (BranchID),
    FOREIGN KEY (CustomerID)
        REFERENCES CUSTOMER (CustomerID)
);


DROP TABLE IF EXISTS PRODUCTION;

CREATE TABLE PRODUCTION (
    BatchID VARCHAR(7) NOT NULL,
    TypeID VARCHAR(5) NOT NULL,
    QtyProduced INT(5) NOT NULL,
    CONSTRAINT pk_PRODUCTION PRIMARY KEY (BatchID , TypeID),
    FOREIGN KEY (BatchID)
        REFERENCES BATCH (BatchID),
    FOREIGN KEY (TypeID)
        REFERENCES RAWMATERIALS (TypeID)
);





